
			<!-- This code generated from Deliveries Powered by Mahat, Source Machine : 15.206.208.9 , Build Number : Build 14092021 #2021-09-014(Updated on 29102021 12:49) on 07/16/2023 14:54:51 -->
			@using Microsoft.AspNetCore.Http
			@inject IHttpContextAccessor HttpContextAccessor
			@model DineandDiscover.Models.SpecialEventandServicesModel
			@{
			ViewData["Title"] = "Update Special Event and Services";

			Layout = "~/Views/Shared/_Layout.cshtml";
			
			}

			@using(Html.BeginForm("Update_Special_Event_and_Services", "SpecialEventandServices", FormMethod.Post, new { enctype="multipart/form-data", @id = "formId"}))
			{

			<div class="card card-block contCard"><!--Form_Main_Card-->
				<div class="mobileHeader"><!--form_card_header-->
					<div class="row">
						<div class="col-sm-12 col-xs-12">
							<h4 class="formHdr">Update Special Event and Services</h4>
						</div>
					</div>
				</div><!--form_card_header-->
				<!--form_error_display-->
				@if(ViewData["message"] != null)
				{
				<div class="row">
				<div class="col-sm-12 col-xs-12">
				<div class="alert alert-danger alert-dismissible ">
				<button type="button" class="close" data-dismiss="alert" aria-label="Close">
				<span aria-hidden="true">x</span>
				</button>
				Info :  @ViewData["message"]
				</div>
				</div>
				</div>
				}
				
				
				 
				
				<!--form_error_display-->
				<div class=""><!--form_inner_card-->
					<div class="card-block"><!--form_inner_card_block-->
					    @Html.HiddenFor(m => m.SpecialEventandServicesid)
						 

						
						<div class="row"><!--field_container_row-->
							<!--fieldsStartsHere-->
								
								<div class="col-sm-3 col-xs-12 p-2 specialeventandservices_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label>Special Event and Services</label>
										<select name="specialeventandservices" id="specialeventandservices" class="form-control  "></select>

									</div>
									@Html.ValidationMessageFor(model => model.specialeventandservices)
									<label id="specialeventandservices-error" class="help-block" style="display: none" for="specialeventandservices"></label>
								</div>
							</div>
 
				<div class="col-sm-12 col-xs-12 mt-3"><!--form_group_div_block-->
					<div class="card card-blue card-section cma_section_band">
							<div class="card-head">
								<header>Special Events :</header>
							</div>
							<div class="card-body card-container-Padding-NoShadow">
								<div class="row">
										<div class="col-sm-3 col-xs-12 p-2 devent1_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>D Event 1</label>
                                @Html.TextBoxFor(m => m.devent1, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.devent1)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 devent2_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>D Event 2</label>
                                @Html.TextBoxFor(m => m.devent2, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.devent2)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 devent3_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>D Event 3</label>
                                @Html.TextBoxFor(m => m.devent3, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.devent3)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 uevent1_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>U Event 1</label>
                                @Html.TextBoxFor(m => m.uevent1, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.uevent1)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 uevent2_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>U Event 2</label>
                                @Html.TextBoxFor(m => m.uevent2, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.uevent2)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 uevent3_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>U Event 3</label>
                                @Html.TextBoxFor(m => m.uevent3, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.uevent3)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 sevent1_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>S Event 1</label>
                                @Html.TextBoxFor(m => m.sevent1, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.sevent1)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 sevent2_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>S Event 2</label>
                                @Html.TextBoxFor(m => m.sevent2, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.sevent2)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 sevent3_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>S Event 3</label>
                                @Html.TextBoxFor(m => m.sevent3, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.sevent3)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 sevent4_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>S Event 4</label>
                                @Html.TextBoxFor(m => m.sevent4, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.sevent4)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 sevent5_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>S Event 5</label>
                                @Html.TextBoxFor(m => m.sevent5, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.sevent5)
							</div>
						</div>
					</div>


								</div>
							</div>
					</div>
				</div><!--form_group_div_block-->
			 
 
				<div class="col-sm-12 col-xs-12 mt-3"><!--form_group_div_block-->
					<div class="card card-blue card-section cma_section_band">
							<div class="card-head">
								<header>Delivery and Takeout :</header>
							</div>
							<div class="card-body card-container-Padding-NoShadow">
								<div class="row">
										<div class="col-sm-3 col-xs-12 p-2 deliveryconditionasperchargeindication_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>Delivery condition as per charge  indication</label>
                                @Html.TextBoxFor(m => m.deliveryconditionasperchargeindication, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.deliveryconditionasperchargeindication)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-4 deliveryavailable_craftmyapp_container">
							<div>

							<label>Delivery Available </label><br>
							<div class="form-group">
                                                        <div>
                                                          <label class="switch">
                                                          @Html.CheckBoxFor(m => m.deliveryavailable,new {@class = "" })
                                                           
                                                          <span class="slider round"></span>
                                                        </label>
                                                        </div>
                                                      </div>

							</div>
							</div>


								</div>
							</div>
					</div>
				</div><!--form_group_div_block-->
			 
 
				<div class="col-sm-12 col-xs-12 mt-3"><!--form_group_div_block-->
					<div class="card card-blue card-section cma_section_band">
							<div class="card-head">
								<header>Payment Options :</header>
							</div>
							<div class="card-body card-container-Padding-NoShadow">
								<div class="row">
										<div class="col-sm-3 col-xs-12 p-2 paymenturl_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>Payment  url :</label>
                                @Html.TextBoxFor(m => m.paymenturl, new {@type="url",@maxlength="256", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.paymenturl)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-2 paymentqrcode_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label>Payment  Qrcode :</label>
										<br><input type="file" multiple accept="image/*"  id="paymentqrcode" name="paymentqrcode">

										<div id="paymentqrcodeDisp" href=""></div>
										<i class="form-group__bar" ></i>
									</div>
									@Html.ValidationMessageFor(model => model.paymentqrcode)
									<label id="paymentqrcode-error" class="help-block" style="display: none" for="paymentqrcode"></label>
								</div>
							</div>
<div class="col-sm-3 col-xs-12 p-2 paymentmobilenumber_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>Payment Mobile Number : </label>
                                @Html.TextBoxFor(m => m.paymentmobilenumber, new {@type="text",@maxlength="20", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.paymentmobilenumber)
							</div>
						</div>
					</div>
<div class="col-sm-3 col-xs-12 p-4 payoffline_craftmyapp_container">
							<div>

							<label>Pay Offline</label><br>
							<div class="form-group">
                                                        <div>
                                                          <label class="switch">
                                                          @Html.CheckBoxFor(m => m.payoffline,new {@class = "" })
                                                           
                                                          <span class="slider round"></span>
                                                        </label>
                                                        </div>
                                                      </div>

							</div>
							</div>


								</div>
							</div>
					</div>
				</div><!--form_group_div_block-->
			 


							<!--fieldsEndsHere-->	
						</div><!--field_container_row-->


						<div class="card-block"><!--form_button_card_block-->
							<button type="button" onclick="window.history.back()"  class="btn btn-secondary cma_cancel_button waves-effect">Cancel</button>
							<button type="button" id="btnSubmit" class="btn cma_primary_button  waves-effect pull-right">Update Special Event and Services</button>
						</div><!--form_button_card_block-->


					</div><!--form_inner_card_block-->
				</div><!--form_inner_card-->
			</div><!--Form_Main_Card-->

			}<!--EndFORM-->


			
			 
			 <script type="text/javascript">
				$(document).ready(function () {


				var Actions=getAutho("SpecialEventandServices","edit")
				if(Actions == undefined){
				window.location = "@Url.Action("RoleAuthorizationFailed", "users")"
				}


				});
				</script>
			
			<script>
var strspecialeventandservices;
</script>
@if (Model != null)
{
if(Model.specialeventandservices != null && Model.specialeventandservices.ToString() != "")
{
<script>
strspecialeventandservices="@Model.specialeventandservices"
</script>
}
}
<script>
var strpaymentqrcode;
</script>
@if (Model != null)
{
if(Model.paymentqrcode != null && Model.paymentqrcode.ToString() != "")
{
<script>
var uploaded_paymentqrcode = "@Model.paymentqrcode".split('|');
                                            var iterate = 0;
                                            for (var i = 0; i < uploaded_paymentqrcode.length; i++) {


	                                            if (uploaded_paymentqrcode[i] != "") {
		                                            iterate = iterate + 1;
		                                            if (iterate == 1)
			                                            $('#paymentqrcodeDisp').append('<a href=' + uploaded_paymentqrcode[i] + ' class="imgpaymentqrcode auto_clr_photo"><img  src=' + uploaded_paymentqrcode[i] + ' width="100px" /></a>')
		                                            else

			                                            $('#paymentqrcodeDisp').append('<div style="display:none"> <a href=' + uploaded_paymentqrcode[i] + ' class="imgpaymentqrcode auto_clr_photo"><img  src=' + uploaded_paymentqrcode[i] + ' width="100px" /></a></div>')
		 
	                                            }


                                            }
$('body').on('click', 'a.imgpaymentqrcode', function (e) {
                            e.preventDefault();
                            $('.imgpaymentqrcode').colorbox({ rel: '.imgpaymentqrcode', width: "90%", height: "80%" });
                            $.colorbox({ open: true });
                            });
</script>
}
}
<link href="~/components/jquery-colorbox/colorbox.css" rel="stylesheet" />
								<script src="~/components/jquery-colorbox/jquery.colorbox.js"></script> 

			
			
			
			
			<script>
			
			 
			</script>
			<script>
	$(document).ready(function () {
		
			$('#formId').validate({
                                        highlight: function(element) {
                                        $(element).closest('.form-group').addClass('has-error');
                                        $(element).closest('.form-group').removeClass('has-success');
                                        $(element).addClass('form-control-error');
                                        $(element).removeClass('form-control-success');
                                        },
                                        unhighlight: function(element) {
                                        $(element).closest('.form-group').removeClass('has-error');
                                        $(element).closest('.form-group').addClass('has-success');
                                        $(element).addClass('form-control-success');
                                        $(element).removeClass('form-control-error');
                                        },
                                        errorElement: 'span',
                                        errorClass: 'help-block'
                                        });

			    var validator = $("#formId").validate({ /* settings */ });
                                            $("#btnSubmit").click(function(){
                                                if ($("#formId").valid()){
                                                        $(".page-loader").show()

														
                                                        $("#formId").submit();
                                                }else{
                                                    validator.focusInvalid();
                                                    swal({
                                                        title: 'Validation Failed!',
                                                        text: "Please check your entry",
                                                        type: 'error',
                                                        buttonsStyling: false,
                                                        confirmButtonClass: 'btn btn-primary'
                                                    })
                                                }
                                            })


                                        })

	 
	</script>

			
			
            

			
			<script>
function lookup_SpecialEventandServices_specialeventandservices() {

var sendFilterData = {
	
}

$.ajax({
url: '@Url.Action("lookup_SpecialEventandServices_specialeventandservices")',
dataType: 'json',

success: function(data) {

       var ddltarget_specialeventandservices="#specialeventandservices"
	    $(ddltarget_specialeventandservices).empty();
		
		$(ddltarget_specialeventandservices).append("<option value=''>Choose</option>");


		

		$.each(data, function(index, optionDataInner) {

				    if(strspecialeventandservices== optionDataInner.BasicInformationid)
					$(ddltarget_specialeventandservices).append('<option selected value=' + optionDataInner.BasicInformationid + '>' + optionDataInner.nameoftherestaurant+ '</option>')
					else
					$(ddltarget_specialeventandservices).append('<option  value=' + optionDataInner.BasicInformationid+ '>' + optionDataInner.nameoftherestaurant+ '</option>')
								


		});

		

	
},
error: function(jqXHR, textStatus, errorThrown) {
if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
{
swal({
title: 'Failed!',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary',
allowOutsideClick: false
}).then(function() {
window.location = "@Url.Action("AuthorizationFailed", "users")"
}) 
}
else
{
swal({
title: 'Contact Administrator !',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
}) 
}
}
})

}
</script>
<script>
						$(document).ready(function(){

							lookup_SpecialEventandServices_specialeventandservices()
							


						})
						
						</script>





