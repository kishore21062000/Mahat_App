
			<!-- This code generated from Deliveries Powered by Mahat, Source Machine : 15.206.208.9 , Build Number : Build 14092021 #2021-09-014(Updated on 29102021 12:49) on 07/16/2023 13:52:10 -->
			@using Microsoft.AspNetCore.Http
			@inject IHttpContextAccessor HttpContextAccessor
			@model DineandDiscover.Models.ReservationandDietaryOptionsModel
			@{
			ViewData["Title"] = "Add Reservation and Dietary Options";

			Layout = "~/Views/Shared/_Layout.cshtml";
			
			}

			@using(Html.BeginForm("Add_Reservation_and_Dietary_Options", "ReservationandDietaryOptions", FormMethod.Post, new { enctype="multipart/form-data", @id = "formId"}))
			{

			<div class="card card-block contCard"><!--Form_Main_Card-->
				<div class="mobileHeader"><!--form_card_header-->
					<div class="row">
						<div class="col-sm-12 col-xs-12">
							<h4 class="formHdr">Add Reservation and Dietary Options</h4>
						</div>
					</div>
				</div><!--form_card_header-->
				<!--form_error_display-->
				@if(ViewData["message"] != null)
				{
				<div class="row">
				<div class="col-sm-12 col-xs-12">
				<div class="alert alert-danger alert-dismissible ">
				<button type="button" class="close" data-dismiss="alert" aria-label="Close">
				<span aria-hidden="true">x</span>
				</button>
				Info :  @ViewData["message"]
				</div>
				</div>
				</div>
				}
				
				
				 
				
				<!--form_error_display-->
				<div class=""><!--form_inner_card-->
					<div class="card-block"><!--form_inner_card_block-->
					    @Html.HiddenFor(m => m.ReservationandDietaryOptionsid)
						 

						
						<div class="row"><!--field_container_row-->
							<!--fieldsStartsHere-->
								
								<div class="col-sm-3 col-xs-12 p-2 reservationanddietaryoptions_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label>Reservation and Dietary Options :</label>
										<select name="reservationanddietaryoptions" id="reservationanddietaryoptions" class="form-control  "></select>

									</div>
									@Html.ValidationMessageFor(model => model.reservationanddietaryoptions)
									<label id="reservationanddietaryoptions-error" class="help-block" style="display: none" for="reservationanddietaryoptions"></label>
								</div>
							</div>
<div class="col-sm-3 col-xs-12 p-4 reservationsavailable_craftmyapp_container">
							<div>

							<label>Reservations Available :</label><br>
							<div class="form-group">
                                                        <div>
                                                          <label class="switch">
                                                          @Html.CheckBoxFor(m => m.reservationsavailable,new {@class = "" })
                                                           
                                                          <span class="slider round"></span>
                                                        </label>
                                                        </div>
                                                      </div>

							</div>
							</div>
 
				<div class="col-sm-12 col-xs-12 mt-3"><!--form_group_div_block-->
					<div class="card card-blue card-section cma_section_band">
							<div class="card-head">
								<header>Dietary Options :</header>
							</div>
							<div class="card-body card-container-Padding-NoShadow">
								<div class="row">
										<div class="col-sm-3 col-xs-12 my-5 vegetarian_craftmyapp_container">
							<div>
													<div class="checkbox checkbox-styled">
<label>@Html.CheckBoxFor(m => m.vegetarian,new {@class = "" })</label>
					<span>Vegetarian</span>
					</div>

							
							</div>
							</div>
<div class="col-sm-3 col-xs-12 my-5 nonvegetarian_craftmyapp_container">
							<div>
													<div class="checkbox checkbox-styled">
<label>@Html.CheckBoxFor(m => m.nonvegetarian,new {@class = "" })</label>
					<span>Non - Vegetarian</span>
					</div>

							
							</div>
							</div>
<div class="col-sm-3 col-xs-12 my-5 diaryfree_craftmyapp_container">
							<div>
													<div class="checkbox checkbox-styled">
<label>@Html.CheckBoxFor(m => m.diaryfree,new {@class = "" })</label>
					<span>Diary - Free</span>
					</div>

							
							</div>
							</div>
<div class="col-sm-3 col-xs-12 my-5 nutfree_craftmyapp_container">
							<div>
													<div class="checkbox checkbox-styled">
<label>@Html.CheckBoxFor(m => m.nutfree,new {@class = "" })</label>
					<span>Nut - Free </span>
					</div>

							
							</div>
							</div>
<div class="col-sm-3 col-xs-12 my-5 seafood_craftmyapp_container">
							<div>
													<div class="checkbox checkbox-styled">
<label>@Html.CheckBoxFor(m => m.seafood,new {@class = "" })</label>
					<span>Seafood </span>
					</div>

							
							</div>
							</div>
<div class="col-sm-3 col-xs-12 my-5 lowsodium_craftmyapp_container">
							<div>
													<div class="checkbox checkbox-styled">
<label>@Html.CheckBoxFor(m => m.lowsodium,new {@class = "" })</label>
					<span>Low - Sodium </span>
					</div>

							
							</div>
							</div>


								</div>
							</div>
					</div>
				</div><!--form_group_div_block-->
			 


							<!--fieldsEndsHere-->	
						</div><!--field_container_row-->


						<div class="card-block"><!--form_button_card_block-->
							<button type="button" onclick="window.history.back()"  class="btn btn-secondary cma_cancel_button waves-effect">Cancel</button>
							<button type="button" id="btnSubmit" class="btn cma_primary_button  waves-effect pull-right">Add Reservation and Dietary Options</button>
						</div><!--form_button_card_block-->


					</div><!--form_inner_card_block-->
				</div><!--form_inner_card-->
			</div><!--Form_Main_Card-->

			}<!--EndFORM-->


			
			 
			 <script type="text/javascript">
				$(document).ready(function () {


				var Actions=getAutho("ReservationandDietaryOptions","create")
				if(Actions == undefined){
				window.location = "@Url.Action("RoleAuthorizationFailed", "users")"
				}


				});
				</script>
			
			<script>
var strreservationanddietaryoptions;
</script>
@if (Model != null)
{
if(Model.reservationanddietaryoptions != null && Model.reservationanddietaryoptions.ToString() != "")
{
<script>
strreservationanddietaryoptions="@Model.reservationanddietaryoptions"
</script>
}
}
@if (Model != null)
{
if(Model.vegetarian != null && Model.vegetarian.ToString() != "")
{
<script>
if("@Model.vegetarian"=="True")
{
$("#vegetarianparent").addClass("active")
}
</script>
}
}
@if (Model != null)
{
if(Model.nonvegetarian != null && Model.nonvegetarian.ToString() != "")
{
<script>
if("@Model.nonvegetarian"=="True")
{
$("#nonvegetarianparent").addClass("active")
}
</script>
}
}
@if (Model != null)
{
if(Model.diaryfree != null && Model.diaryfree.ToString() != "")
{
<script>
if("@Model.diaryfree"=="True")
{
$("#diaryfreeparent").addClass("active")
}
</script>
}
}
@if (Model != null)
{
if(Model.nutfree != null && Model.nutfree.ToString() != "")
{
<script>
if("@Model.nutfree"=="True")
{
$("#nutfreeparent").addClass("active")
}
</script>
}
}
@if (Model != null)
{
if(Model.seafood != null && Model.seafood.ToString() != "")
{
<script>
if("@Model.seafood"=="True")
{
$("#seafoodparent").addClass("active")
}
</script>
}
}
@if (Model != null)
{
if(Model.lowsodium != null && Model.lowsodium.ToString() != "")
{
<script>
if("@Model.lowsodium"=="True")
{
$("#lowsodiumparent").addClass("active")
}
</script>
}
}

			
			
			
			
			<script>
			
			 
			</script>
			<script>
	$(document).ready(function () {
		
			$('#formId').validate({
                                        highlight: function(element) {
                                        $(element).closest('.form-group').addClass('has-error');
                                        $(element).closest('.form-group').removeClass('has-success');
                                        $(element).addClass('form-control-error');
                                        $(element).removeClass('form-control-success');
                                        },
                                        unhighlight: function(element) {
                                        $(element).closest('.form-group').removeClass('has-error');
                                        $(element).closest('.form-group').addClass('has-success');
                                        $(element).addClass('form-control-success');
                                        $(element).removeClass('form-control-error');
                                        },
                                        errorElement: 'span',
                                        errorClass: 'help-block'
                                        });

			    var validator = $("#formId").validate({ /* settings */ });
                                            $("#btnSubmit").click(function(){
                                                if ($("#formId").valid()){
                                                        $(".page-loader").show()

														
                                                        $("#formId").submit();
                                                }else{
                                                    validator.focusInvalid();
                                                    swal({
                                                        title: 'Validation Failed!',
                                                        text: "Please check your entry",
                                                        type: 'error',
                                                        buttonsStyling: false,
                                                        confirmButtonClass: 'btn btn-primary'
                                                    })
                                                }
                                            })


                                        })

	 
	</script>

			
			
            

			
			<script>
function lookup_ReservationandDietaryOptions_reservationanddietaryoptions() {

var sendFilterData = {
	
}

$.ajax({
url: '@Url.Action("lookup_ReservationandDietaryOptions_reservationanddietaryoptions")',
dataType: 'json',

success: function(data) {

       var ddltarget_reservationanddietaryoptions="#reservationanddietaryoptions"
	    $(ddltarget_reservationanddietaryoptions).empty();
		
		$(ddltarget_reservationanddietaryoptions).append("<option value=''>Choose</option>");


		

		$.each(data, function(index, optionDataInner) {

				    if(strreservationanddietaryoptions== optionDataInner.BasicInformationid)
					$(ddltarget_reservationanddietaryoptions).append('<option selected value=' + optionDataInner.BasicInformationid + '>' + optionDataInner.nameoftherestaurant+ '</option>')
					else
					$(ddltarget_reservationanddietaryoptions).append('<option  value=' + optionDataInner.BasicInformationid+ '>' + optionDataInner.nameoftherestaurant+ '</option>')
								


		});

		

	
},
error: function(jqXHR, textStatus, errorThrown) {
if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
{
swal({
title: 'Failed!',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary',
allowOutsideClick: false
}).then(function() {
window.location = "@Url.Action("AuthorizationFailed", "users")"
}) 
}
else
{
swal({
title: 'Contact Administrator !',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
}) 
}
}
})

}
</script>
<script>
						$(document).ready(function(){

							lookup_ReservationandDietaryOptions_reservationanddietaryoptions()
							


						})
						
						</script>






