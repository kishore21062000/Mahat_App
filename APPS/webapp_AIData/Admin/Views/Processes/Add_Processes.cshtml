
			<!-- This code generated from Deliveries Powered by Mahat, Source Machine : 15.206.208.9 , Build Number : Build 14092021 #2021-09-014(Updated on 29102021 12:49) on 08/26/2023 08:54:53 -->
			@using Microsoft.AspNetCore.Http
			@inject IHttpContextAccessor HttpContextAccessor
			@model AIData.Models.ProcessesModel
			@{
			ViewData["Title"] = "Add Processes";

			Layout = "~/Views/Shared/_Layout.cshtml";
			
			}

			@using(Html.BeginForm("Add_Processes", "Processes", FormMethod.Post, new { enctype="multipart/form-data", @id = "formId"}))
			{

			<div class="card card-block contCard"><!--Form_Main_Card-->
				<div class="mobileHeader"><!--form_card_header-->
					<div class="row">
						<div class="col-sm-12 col-xs-12">
							<h4 class="formHdr">Add Processes</h4>
						</div>
					</div>
				</div><!--form_card_header-->
				<!--form_error_display-->
				@if(ViewData["message"] != null)
				{
				<div class="row">
				<div class="col-sm-12 col-xs-12">
				<div class="alert alert-danger alert-dismissible ">
				<button type="button" class="close" data-dismiss="alert" aria-label="Close">
				<span aria-hidden="true">x</span>
				</button>
				Info :  @ViewData["message"]
				</div>
				</div>
				</div>
				}
				
				
				 
				
				<!--form_error_display-->
				<div class=""><!--form_inner_card-->
					<div class="card-block"><!--form_inner_card_block-->
					    @Html.HiddenFor(m => m.Processesid)
						 

						
						<div class="row"><!--field_container_row-->
							<!--fieldsStartsHere-->
								
								<div class="col-sm-3 col-xs-12 p-2 industryname_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label>Industry Name</label>
										<select name="industryname" id="industryname" class="form-control  "></select>

									</div>
									@Html.ValidationMessageFor(model => model.industryname)
									<label id="industryname-error" class="help-block" style="display: none" for="industryname"></label>
								</div>
							</div>
<div class="col-sm-3 col-xs-12 p-2 industrytypename_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label>IndustryType Name</label>
										<select name="industrytypename" id="industrytypename" class="form-control  "></select>

									</div>
									@Html.ValidationMessageFor(model => model.industrytypename)
									<label id="industrytypename-error" class="help-block" style="display: none" for="industrytypename"></label>
								</div>
							</div>
<div class="col-sm-3 col-xs-12 p-2 subtypename_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label>Subtype Name</label>
										<select name="subtypename" id="subtypename" class="form-control  "></select>

									</div>
									@Html.ValidationMessageFor(model => model.subtypename)
									<label id="subtypename-error" class="help-block" style="display: none" for="subtypename"></label>
								</div>
							</div>
<div class="col-sm-3 col-xs-12 p-2 businessfunctionname_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label>Business Function Name</label>
										<select name="businessfunctionname" id="businessfunctionname" class="form-control  "></select>

									</div>
									@Html.ValidationMessageFor(model => model.businessfunctionname)
									<label id="businessfunctionname-error" class="help-block" style="display: none" for="businessfunctionname"></label>
								</div>
							</div>
<div class="col-sm-3 col-xs-12 p-2 businessprocessname_craftmyapp_container">
						<div>
							<div class="form-group" > 
								<label>Business Process Name</label>
                                @Html.TextBoxFor(m => m.businessprocessname, new {@type="text",@maxlength="128", @class = "form-control form-control-lg " })

							     @Html.ValidationMessageFor(model => model.businessprocessname)
							</div>
						</div>
					</div>
<div class="col-sm-12 col-xs-12 p-2 description_craftmyapp_container">
								<div>
									<div class="form-group form-group--float-above my-3" > 
										<label>Description</label>
										@Html.TextAreaFor(m => m.description, new {@minlength="0",@maxlength="256", @class = "form-control form-control-lg " })

										<i class="form-group__bar" ></i>
									</div>
									@Html.ValidationMessageFor(model => model.description)
									<label id="description-error" class="help-block" style="display: none" for="description"></label>
								</div>
							</div>


							<!--fieldsEndsHere-->	
						</div><!--field_container_row-->


						<div class="card-block"><!--form_button_card_block-->
							<button type="button" onclick="window.history.back()"  class="btn btn-secondary cma_cancel_button waves-effect">Cancel</button>
							<button type="button" id="btnSubmit" class="btn cma_primary_button  waves-effect pull-right">Add Processes</button>
						</div><!--form_button_card_block-->


					</div><!--form_inner_card_block-->
				</div><!--form_inner_card-->
			</div><!--Form_Main_Card-->

			}<!--EndFORM-->


			
			 
			 <script type="text/javascript">
				$(document).ready(function () {


				var Actions=getAutho("Processes","create")
				if(Actions == undefined){
				window.location = "@Url.Action("RoleAuthorizationFailed", "users")"
				}


				});
				</script>
			
			<script>
var strindustryname;
</script>
@if (Model != null)
{
if(Model.industryname != null && Model.industryname.ToString() != "")
{
<script>
strindustryname="@Model.industryname"
</script>
}
}
<script>
var strindustrytypename;
</script>
@if (Model != null)
{
if(Model.industrytypename != null && Model.industrytypename.ToString() != "")
{
<script>
strindustrytypename="@Model.industrytypename"
</script>
}
}
<script>
var strsubtypename;
</script>
@if (Model != null)
{
if(Model.subtypename != null && Model.subtypename.ToString() != "")
{
<script>
strsubtypename="@Model.subtypename"
</script>
}
}
<script>
var strbusinessfunctionname;
</script>
@if (Model != null)
{
if(Model.businessfunctionname != null && Model.businessfunctionname.ToString() != "")
{
<script>
strbusinessfunctionname="@Model.businessfunctionname"
</script>
}
}

			
			
			
			
			<script>
			
			 
			</script>
			<script>
	$(document).ready(function () {
		
			$('#formId').validate({
                                        highlight: function(element) {
                                        $(element).closest('.form-group').addClass('has-error');
                                        $(element).closest('.form-group').removeClass('has-success');
                                        $(element).addClass('form-control-error');
                                        $(element).removeClass('form-control-success');
                                        },
                                        unhighlight: function(element) {
                                        $(element).closest('.form-group').removeClass('has-error');
                                        $(element).closest('.form-group').addClass('has-success');
                                        $(element).addClass('form-control-success');
                                        $(element).removeClass('form-control-error');
                                        },
                                        errorElement: 'span',
                                        errorClass: 'help-block'
                                        });

			    var validator = $("#formId").validate({ /* settings */ });
                                            $("#btnSubmit").click(function(){
                                                if ($("#formId").valid()){
                                                        $(".page-loader").show()

														
                                                        $("#formId").submit();
                                                }else{
                                                    validator.focusInvalid();
                                                    swal({
                                                        title: 'Validation Failed!',
                                                        text: "Please check your entry",
                                                        type: 'error',
                                                        buttonsStyling: false,
                                                        confirmButtonClass: 'btn btn-primary'
                                                    })
                                                }
                                            })


                                        })

	 
	</script>

			
			
            

			
			<script>
function lookup_Processes_industryname() {

var sendFilterData = {
	
}

$.ajax({
url: '@Url.Action("lookup_Processes_industryname")',
dataType: 'json',

success: function(data) {

       var ddltarget_industryname="#industryname"
	    $(ddltarget_industryname).empty();
		
		$(ddltarget_industryname).append("<option value=''>Choose</option>");


		

		$.each(data, function(index, optionDataInner) {

				    if(strindustryname== optionDataInner.Industriesid)
					$(ddltarget_industryname).append('<option selected value=' + optionDataInner.Industriesid + '>' + optionDataInner.industryname+ '</option>')
					else
					$(ddltarget_industryname).append('<option  value=' + optionDataInner.Industriesid+ '>' + optionDataInner.industryname+ '</option>')
								


		});

		

	
},
error: function(jqXHR, textStatus, errorThrown) {
if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
{
swal({
title: 'Failed!',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary',
allowOutsideClick: false
}).then(function() {
window.location = "@Url.Action("AuthorizationFailed", "users")"
}) 
}
else
{
swal({
title: 'Contact Administrator !',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
}) 
}
}
})

}
</script>
<script>
						$(document).ready(function(){

							lookup_Processes_industryname()
							


						})
						
						</script>
<script>
function lookup_Processes_industrytypename(industryname) {

var sendFilterData = {
	"industryname":industryname
}

$.ajax({
url: '@Url.Action("lookup_Processes_industrytypename")',
dataType: 'json',
data: sendFilterData,
success: function(data) {

       var ddltarget_industrytypename="#industrytypename"
	    $(ddltarget_industrytypename).empty();
		
		$(ddltarget_industrytypename).append("<option value=''>Choose</option>");


		

		$.each(data, function(index, optionDataInner) {

				    if(strindustrytypename== optionDataInner.IndustyTypesid)
					$(ddltarget_industrytypename).append('<option selected value=' + optionDataInner.IndustyTypesid + '>' + optionDataInner.industrytypename+ '</option>')
					else
					$(ddltarget_industrytypename).append('<option  value=' + optionDataInner.IndustyTypesid+ '>' + optionDataInner.industrytypename+ '</option>')
								


		});

		

	
},
error: function(jqXHR, textStatus, errorThrown) {
if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
{
swal({
title: 'Failed!',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary',
allowOutsideClick: false
}).then(function() {
window.location = "@Url.Action("AuthorizationFailed", "users")"
}) 
}
else
{
swal({
title: 'Contact Administrator !',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
}) 
}
}
})

}
</script>
<script>
						$(document).ready(function(){

							lookup_Processes_industrytypename(strindustryname)
							$("#industryname").change(function(){
									 
									    lookup_Processes_industrytypename($("#industryname").val())

							        })



						})
						
						</script>
<script>
function lookup_Processes_subtypename(industryname,industrytypename) {

var sendFilterData = {
	"industryname":industryname,
"industrytypename":industrytypename
}

$.ajax({
url: '@Url.Action("lookup_Processes_subtypename")',
dataType: 'json',
data: sendFilterData,
success: function(data) {

       var ddltarget_subtypename="#subtypename"
	    $(ddltarget_subtypename).empty();
		
		$(ddltarget_subtypename).append("<option value=''>Choose</option>");


		

		$.each(data, function(index, optionDataInner) {

				    if(strsubtypename== optionDataInner.SubTypesid)
					$(ddltarget_subtypename).append('<option selected value=' + optionDataInner.SubTypesid + '>' + optionDataInner.subtypename+ '</option>')
					else
					$(ddltarget_subtypename).append('<option  value=' + optionDataInner.SubTypesid+ '>' + optionDataInner.subtypename+ '</option>')
								


		});

		

	
},
error: function(jqXHR, textStatus, errorThrown) {
if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
{
swal({
title: 'Failed!',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary',
allowOutsideClick: false
}).then(function() {
window.location = "@Url.Action("AuthorizationFailed", "users")"
}) 
}
else
{
swal({
title: 'Contact Administrator !',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
}) 
}
}
})

}
</script>
<script>
						$(document).ready(function(){

							lookup_Processes_subtypename(strindustryname,strindustrytypename)
							$("#industryname").change(function(){
									 
									    lookup_Processes_subtypename($("#industryname").val())

							        })
$("#industrytypename").change(function(){
									 
									    lookup_Processes_subtypename($("#industryname").val(),$("#industrytypename").val())

							        })



						})
						
						</script>
<script>
function lookup_Processes_businessfunctionname(industryname,industrytypename,subtypename) {

var sendFilterData = {
	"industryname":industryname,
"industrytypename":industrytypename,
"subtypename":subtypename
}

$.ajax({
url: '@Url.Action("lookup_Processes_businessfunctionname")',
dataType: 'json',
data: sendFilterData,
success: function(data) {

       var ddltarget_businessfunctionname="#businessfunctionname"
	    $(ddltarget_businessfunctionname).empty();
		
		$(ddltarget_businessfunctionname).append("<option value=''>Choose</option>");


		

		$.each(data, function(index, optionDataInner) {

				    if(strbusinessfunctionname== optionDataInner.Funcitonsid)
					$(ddltarget_businessfunctionname).append('<option selected value=' + optionDataInner.Funcitonsid + '>' + optionDataInner.businessfunctionname+ '</option>')
					else
					$(ddltarget_businessfunctionname).append('<option  value=' + optionDataInner.Funcitonsid+ '>' + optionDataInner.businessfunctionname+ '</option>')
								


		});

		

	
},
error: function(jqXHR, textStatus, errorThrown) {
if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
{
swal({
title: 'Failed!',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary',
allowOutsideClick: false
}).then(function() {
window.location = "@Url.Action("AuthorizationFailed", "users")"
}) 
}
else
{
swal({
title: 'Contact Administrator !',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
}) 
}
}
})

}
</script>
<script>
						$(document).ready(function(){

							lookup_Processes_businessfunctionname(strindustryname,strindustrytypename,strsubtypename)
							$("#industryname").change(function(){
									 
									    lookup_Processes_businessfunctionname($("#industryname").val())

							        })
$("#industrytypename").change(function(){
									 
									    lookup_Processes_businessfunctionname($("#industryname").val(),$("#industrytypename").val())

							        })
$("#subtypename").change(function(){
									 
									    lookup_Processes_businessfunctionname($("#industryname").val(),$("#industrytypename").val(),$("#subtypename").val())

							        })



						})
						
						</script>






