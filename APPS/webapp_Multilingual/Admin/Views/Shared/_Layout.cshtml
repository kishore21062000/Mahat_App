<!--This code generated from Deliveries Powered by Mahat, Source Machine : 15.206.208.9 , Build Number : Build 14092021 #2021-09-014(Updated on 29102021 12:49) on 07/08/2023 10:19:55-->

@using Microsoft.AspNetCore.Http
<!DOCTYPE html>
<html lang="en">

<head>
   <title>@ViewBag.Title</title>
  <!-- BEGIN META -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="keywords" content="your,keywords">
  <meta name="description" content="@ViewBag.Title">
  <!-- END META -->
  <!-- BEGIN STYLESHEETS -->
  <link href='https://fonts.googleapis.com/css?family=Roboto:300italic,400italic,300,400,500,700,900' rel='stylesheet' type='text/css' />
  <link type="text/css" rel="stylesheet" href="~/css/bootstrap.css" />
  <link type="text/css" rel="stylesheet" href="~/css/materialadmin.css" />
  <link type="text/css" rel="stylesheet" href="~/css/font-awesome.min.css" />
  <link type="text/css" rel="stylesheet" href="~/css/material-design-iconic-font.min.css" />
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <link type="text/css" rel="stylesheet" href="~/assets/css/theme-default/libs/select2/select2.css" />
  <link type="text/css" rel="stylesheet" href="~/assets/css/theme-default/libs/multi-select/multi-select.css" />
  
       <link type="text/css" rel="stylesheet" href="~/assets/css/theme-default/libs/DataTables/jquery.dataTables.css?1423553989" />
  <link type="text/css" rel="stylesheet" href="~/assets/css/theme-default/libs/DataTables/extensions/dataTables.colVis.css?1423553990" />
  <link type="text/css" rel="stylesheet" href="~/assets/css/theme-default/libs/DataTables/extensions/dataTables.tableTools.css?1423553990" />
  <link type="text/css" rel="stylesheet" href="~/css/responsive.dataTables.min.css" />
<link type="text/css" rel="stylesheet" href="~/css/dataTables.alphabetSearch.css" />
  <!-- SUPPORTING CONTROL FILES-->
   <link rel="stylesheet" href="~/components/sweetalert2/sweetalert2.min.css">
  <!-- END SUPPORTING CONTROL FILES-->
  <!-- END STYLESHEETS -->
  <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!--[if lt IE 9]>
	<script type="text/javascript" src="https://www.codecovers.eu/assets/js/modules/materialadmin/libs/utils/html5shiv.js"></script>
	<script type="text/javascript" src="https://www.codecovers.eu/assets/js/modules/materialadmin/libs/utils/respond.min.js"></script>
    <![endif]-->
<script src="~/js/jquery-1.11.2.min.js"></script>
  <script src="~/js/jquery-migrate-1.2.1.min.js"></script>
  <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/App.js"></script>
<script src="~/js/jquery.nanoscroller.min.js"></script>
  <script src="~/js/AppNavigation.js"></script>
<link type="text/css" rel="stylesheet" href="~/css/custom.css" />
<link type="text/css" rel="stylesheet" href="~/css/custom_changed.css" />
<link type="text/css" rel="stylesheet" href="~/appstyles.css" />
<link rel='shortcut icon' type='image/x-icon' href='~/images/favicon.ico' />

<script>
 function getUrlVars()
                                    {
                                        var vars = [], hash;
                                        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
                                        for(var i = 0; i < hashes.length; i++)
                                        {
                                            hash = hashes[i].split('=');
                                            vars.push(hash[0]);
                                            vars[hash[0]] = hash[1];
                                        }
                                        return vars;
                                    }
            if("@ViewContext.RouteData.Values["controller"].ToString().ToUpper()" != "TENANT"){
            if("@Context.Session.GetString("Multilingualusername")" == null || "@Context.Session.GetString("Multilingualusername")"=="") {
            window.location="@Url.Action("Login", "users")"
            }
            }

         if("@ViewContext.RouteData.Values["controller"].ToString().ToUpper()" == "TENANT"){
				 if("@Context.Session.GetString("Multilingualusername")" == null || "@Context.Session.GetString("Multilingualusername")"=="") {
					$(".page-header-menu-section").hide();
					$(".menubar").hide();
					$("#base").css('padding-left','0px');
                }
			}
     </script>
</head>

<body class="menubar-hoverable header-fixed bg-white">
  <div class="page-loader">

        <div class="page-loader__spinner">


            <img height="50px" width="50px" src="~/images/loading.gif" alt="loader">


        </div>
    </div>
   
    <header id="header">

      <div class="page-header-box">
<a class="btn btn-icon-toggle menubar-toggle" data-toggle="menubar" href="javascript:void(0);">
<i class="fa fa-bars"></i>
</a>
          <h1>@ViewBag.Title</h1>
          <div class="page-header-menu-section">
            <ul class="header-nav header-nav-profile">
              <li class="dropdown">
                <a href="javascript:void(0);" class="dropdown-toggle ink-reaction" data-toggle="dropdown" aria-expanded="false">
                  <img  src="@Context.Session.GetString("Multilingualprofilepicture")" alt="">
                  <span class="profile-info">
                    @Context.Session.GetString("Multilingualusername")
                    <small>@Context.Session.GetString("Multilingualuserrole")</small>
                  </span>
                </a>
                 
                <ul class="dropdown-menu animation-dock">
                  <li><a href="@Url.Action("UpdateProfile", "users")?usersid=@Context.Session.GetString("MultilingualloginUserID")"><i class="material-icons profile-icon">account_circle</i> My profile</a></li>
                  <li><a class="craftmyApp_logout_btn" href="@Url.Action("Logout","users")"><i class="material-icons profile-icon icon-logout">power_settings_new</i> Logout</a></li>
                </ul>
                <!--end .dropdown-menu -->
              </li>
              <!--end .dropdown -->
            </ul>
          </div>

        </div>

 </header>
   
  <div id="base">
     
    <div id="content">

      <section class="main-content">
             

         @RenderBody()
         
      </section>

    </div>
   
    <div id="menubar" class="menubar">
      <div class="menubar-fixed-panel">
        <div>
          <a class="btn btn-icon-toggle btn-default menubar-toggle" data-toggle="menubar" href="javascript:void(0);">
            <i class="fa fa-bars"></i>
          </a>
        </div>
         
      </div>
      <div class="menubar-scroll-panel">
       
        <ul id="main-menu" class="gui-controls mainSideMenu">
          <li>
            <a href="#" class="logo-item">
              <img src="~/images/logo.png" />
            </a>
          </li>
          
            
        </ul>
       

      </div>
     
   
    </div>
    
  

  </div>
   <footer class="page_footer">
    <div class="footer-contact">
      <h3>Contact</h3>
      <p>britman@mahat.us</p>
      <p>+91 9962924409</p>
    </div>
    <figure>
      <img src="~/Icon_set/mahat_logo.png" />
    </figure>
  </footer>

<script>
            if("@ViewContext.RouteData.Values["controller"].ToString().ToUpper()" != "TENANT"){
            if("@Context.Session.GetString("Multilingualusername")" == null || "@Context.Session.GetString("Multilingualusername")"=="") {
            window.location="@Url.Action("Login", "users")"
            }
            }


            
         if("@ViewContext.RouteData.Values["controller"].ToString().ToUpper()" == "TENANT"){
				 if("@Context.Session.GetString("Multilingualusername")" == null || "@Context.Session.GetString("Multilingualusername")"=="") {
					$(".page-header-menu-section").hide();
					$(".menubar").hide();
					$("#base").css('padding-left','0px');
                }
			}
     </script>
  <script src="~/js/spin.min.js"></script>
  <script src="~/js/jquery.autosize.min.js"></script>
  <script src="~/js/moment.min.js"></script>
  <script src="~/libs/select2/select2.min.js"></script>
 
 
  <script src="~/js/AppOffcanvas.js"></script>
  <script src="~/js/AppCard.js"></script>
  <script src="~/js/AppForm.js"></script>
  <script src="~/js/AppNavSearch.js"></script>
  <script src="~/js/AppVendor.js"></script>
 <!-- OLD COMPONENTS -->
   <script src="~/components/sweetalert2/sweetalert2.min.js"></script>
  <script src="~/libs/DataTables/jquery.dataTables.min.js"></script>
 
  <script src="~/libs/DataTables/dataTables.responsive.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/1.7.0/js/dataTables.buttons.min.js"></script>
  <script src="~/libs/DataTables/buttons.flash.min.js"></script>
  <script src="~/libs/DataTables/jszip.min.js"></script>
  <script src="~/libs/DataTables/buttons.html5.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/1.7.0/js/buttons.print.min.js"></script>
  <script src="~/libs/DataTables/extensions/ColVis/js/dataTables.colVis.min.js "></script>
<script src="~/libs/DataTables/extensions/TableTools/js/dataTables.tableTools.min.js "></script>
<script src="~/js/dataTables.alphabetSearch.min.js"></script>
 
  <!-- END OLD COMPONENTS -->
  <!-- END JAVASCRIPT -->

<script src="~/components/jquery/jquery.validate.js"></script>
                                    <script src="~/components/jquery/additional-methods.min.js"></script>
                                    <script src="~/components/autonumeric/autoNumeric.js"></script>

                                    <link rel="stylesheet" href="~/components/Color-Picker-Plugin-jQuery-MiniColors/jquery.minicolors.css">
                                    <script src="~/components/Color-Picker-Plugin-jQuery-MiniColors/jquery.minicolors.js"></script>
                                    <script>
                                    function Automaton_Set_RadionButtonSelectedValue(name, SelectedValue) {
                                        $('input[name="' + name + '"][value="' + SelectedValue + '"]').attr('checked',true);
                                        $('input[name="' + name + '"][value="' + SelectedValue + '"]').parent('label').addClass('active');
                                    
                                    }
                                  
                                     function  getSqlDate(dateString) {

                                        if (dateString != "") {
                                            var str = dateString;
                                            var res = str.split("/");



                                            return res[2] + '-' + res[1] + '-' + res[0];
                                        }
                                        else {
                                            return "";

                                        }

                                    }
                                    function  getSqlDateTime(dateString) {

	                                    if (dateString != "") {
		                                    var str = dateString.substring(0, 10);
		                                    var res = str.split("/");

		                                    var time = str.substring(10, 16);

		                                    return res[2] + '-' + res[1] + '-' + res[0] +time;
	                                    }
	                                    else {
		                                    return "";

	                                    }

                                    }
                                    $(document).ready(function () {
                                       
                                    $(".btn-secondary").html('Back');
                                        $('.alert-success').delay(3000).fadeOut(300);
                                        $("#btnFilter").html('<i class="fa fa-filter"></i>');
                                        $(".select2").select2()

                                        $('#btnFilter').parent().parent().hide();
                                        $(".mobileHeader").hide()

                                        
                                            $('body').on('click', '.automatonShowFilter', function(a) {
                                        $('#btnFilter').parent().parent().toggle("slow");
                                        });

                                       

                                            get_app_menu()
                                            $('#formId').validate({
                                                highlight: function(element) {
                                                    $(element).closest('.form-group').addClass('has-danger');
                                                    $(element).closest('.form-group').removeClass('has-success');
                                                    $(element).addClass('form-control-danger');
                                                    $(element).removeClass('form-control-success');
                                                },
                                                unhighlight: function(element) {
                                                    $(element).closest('.form-group').removeClass('has-danger');
                                                    $(element).closest('.form-group').addClass('has-success');
                                                    $(element).addClass('form-control-success');
                                                    $(element).removeClass('form-control-danger');
                                                },
                                                errorElement: 'label',
                                                errorClass: 'help-block'
                                            });
                                    

                                        var validator = $("#formId").validate({ /* settings */ });
                                            $("#btnSubmit1").click(function(){
                                                if ($("#formId").valid()){
                                                        $(".page-loader").show()
                                                        $("#formId").submit();
                                                }else{
                                                    validator.focusInvalid();
                                                    swal({
                                                        title: 'Validation !',
                                                        text: "Please fill Empty Fields",
                                                        type: 'error',
                                                        buttonsStyling: false,
                                                        confirmButtonClass: 'btn btn-primary'
                                                    })
                                                }
                                            })


                                        })
                                        $('form:first *:input[type!=hidden]:first').focus();

                                        $('body').on('click', '.deleteRecordFromTable', function (e) {
                                            var deleteURL = window.location.origin+($(this).attr("href"))

                                        e.preventDefault(); // <--- prevent form from submitting

                                        swal({
                                            title: "Are you sure to delete?",
                                            text: "",
                                            type: "warning",
                                            showCancelButton: true,
                                            confirmButtonColor: '#DD6B55',
                                            confirmButtonText: 'Yes, I am sure!',
                                            cancelButtonText: "No, cancel it!",
                                            closeOnConfirm: false,
                                            closeOnCancel: false,
                                            dangerMode: true,
                                            }).then(function(isConfirm) {
                                            if (isConfirm) {
                                                
                                                window.location=deleteURL
                                                
                                            } 
                                            })
                                        });
 $('body').on('click', '.craftmyApp_logout_btn', function (e) {
                                            var deleteURL = window.location.origin+($(this).attr("href"))

                                        e.preventDefault(); // <--- prevent form from submitting

                                        swal({
                                            title: "Are you sure to logout?",
                                            text: "",
                                            type: "warning",
                                            showCancelButton: true,
                                            confirmButtonColor: '#DD6B55',
                                            confirmButtonText: 'Yes, I am sure!',
                                            cancelButtonText: "No, cancel it!",
                                            closeOnConfirm: false,
                                            closeOnCancel: false,
                                            dangerMode: true,
                                            }).then(function(isConfirm) {
                                            if (isConfirm) {
                                                
                                                window.location=deleteURL
                                                
                                            } 
                                            })
                                        });

 function get_app_menu(){
          


         
			
			var a =  eval("@Context.Session.GetString("Multilingualmenu_JSON")".replace(/&quot;/g, '"'))
			
			var lookup = {};
			var items = eval("@Context.Session.GetString("Multilingualmenu_JSON")".replace(/&quot;/g, '"'));
			var result = [];
            var result_icon = [];
            var subsystem="";
			for (var item, i = 0; item = items[i++];) {
			  var name = item.parentnode;
  				var icon_of_it= item.parentdisplayicon;
                subsystem=item.subsystem;

			  // if(item.SubSystem=="{SubSystem}")
				//{

						if (!(name in lookup) && name!=null) {
							lookup[name] = 1;
							result.push(name);
                            result_icon.push(icon_of_it);
						}
				//}
			}
			
			//console.log(result)
			
			 var submenu =[];
			 var lookupSubmenu = {};
				 
				
				var selectedGroupID="";
                var subsystem="";
				for (var menu = 0; menu < result.length; menu++) {

					
				 
					 var groupID = result[menu].replace(/[^A-Z0-9]/ig, "_");
				
						var groupOfMenu='<li class="liGroupTop dropdown '+groupID+'">'+
						 '<a class="dropdowns" href="" data-toggle="dropdown"><i  class="'+result_icon[menu]+'"></i> '+ result[menu] +'</a>'+
							'<div class="dropdown-menu">';

                          var groupOfMenu_side='<li  class="has-dropdown '+groupID+'_">'+
							'<a  data-toggle="tooltip" data-placement="right" title="'+result[menu]+'" href="#" class="'+groupID+'_"><i  class="'+result_icon[menu]+'"></i><span class="title">'+result[menu]+'</span></a>'+

                            '<div class="menu-dropdown"><ul>';
						

                            '<div class="menu-dropdown"><ul>';
								 
								 
								 
				
					 //console.log(result[menu]);
					
							for (var item, i = 0; item = items[i++];) {
							  var name = item.projectelementname;
                                subsystem=item.subsystem;

								if(result[menu]==item.parentnode)
								  {
										if (!(name in lookupSubmenu)) {
												lookupSubmenu[name] = 1;
										  
										 
											 
											 
											 
											 var URL = "@Url.Action("Index", "item.controllername")"
                                             URL = URL.replace("Index", item.actionmethodname);
											 URL = URL.replace("item.controllername", item.controllername);
											 
											  

												var controllernameClass = item.controllername.toUpperCase();
												 var controllerActionName ="";


                                                    


           var profileMenu = 'Manage Profiles'
		profileMenu=profileMenu.replace(/[^A-Z0-9]/ig,"_");
												 
												if(name=="Update Profile")
												{
												   URL = "@Url.Action("UpdateProfile", "users")?usersid=@Context.Session.GetString("MultilingualloginUserID")"
												   controllerActionName="UPDATEPROFILE"
												}


                                                if(name=="Change Password")
												{
												   URL = "@Url.Action("ChangePassword", "users")?usersid=@Context.Session.GetString("MultilingualloginUserID")"
												   controllerActionName="CHANGEPASSWORD"
												}
												 
												if(name=="Manage Users"  && subsystem=="Admin"){
													 URL = "@Url.Action("IndexPlatform", "users")"
													 controllerActionName="INDEXPLATFORM"
													   
												 }

                                                
												 
													if("@ViewContext.RouteData.Values["action"].ToString().ToUpper()"=="CHANGEPASSWORD" || "@ViewContext.RouteData.Values["action"].ToString().ToUpper()"=="UPDATEPROFILE" || "@ViewContext.RouteData.Values["action"].ToString().ToUpper()"=="INDEXPLATFORM" || "@ViewContext.RouteData.Values["action"].ToString().ToUpper()"=="CREATEPLATFORM" || "@ViewContext.RouteData.Values["action"].ToString().ToUpper()"=="EDITPLATFORM")
													{
															selectedGroupID=profileMenu
													}
													
													
													if(selectedGroupID==profileMenu)
													{
														 
													 
													   if("@ViewContext.RouteData.Values["action"].ToString().ToUpper()"==controllerActionName)
														 {
															
																groupOfMenu+='<a href="' + URL + '" class="dropdown-item active">'+name+'</a>' 
																groupOfMenu_side+='<li><a href="' + URL + '" class="active">'+name+'</a></li>'  
														}
														else
														{
															groupOfMenu+='<a href="' + URL + '" class="dropdown-item">'+name+'</a>' 
                                                            groupOfMenu_side+='<li><a href="' + URL + '" class="">'+name+'</a></li>'
														}
														
														
													}else{
													 
													 
															 if("@ViewContext.RouteData.Values["controller"].ToString().ToUpper()"==controllernameClass)
															 {
																 
															   if(groupID !=profileMenu)
															   {
																groupOfMenu+='<a href="' + URL + '" class="dropdown-item active">'+name+'</a>' 
                                                                groupOfMenu_side+='<li><a href="' + URL + '" class="active">'+name+'</a></li>'
																
																selectedGroupID=groupID
																
																}
																else
																{
																	groupOfMenu+='<a href="' + URL + '" class="dropdown-item">'+name+'</a>' 
                                                                    groupOfMenu_side+='<li><a href="' + URL + '" class="">'+name+'</a></li>'
																
																
																}
																
															 
																 
															}
															else
															{
																groupOfMenu+='<a href="' + URL + '" class="dropdown-item">'+name+'</a>' 
                                                                groupOfMenu_side+='<li><a href="' + URL + '">'+name+'</a></li>'
															}
															
															
															if("@ViewContext.RouteData.Values["controller"].ToString().ToUpper()"=="LOOKUPS")
															{
																selectedGroupID='liSettingsTop'
															
															}
													
													
													}
													 
													
													 
											
											 
											 
											 
											  submenu.push(name);
										  }
								
								}
							}
							
							groupOfMenu+='</div>'+
									'</li>'

                           groupOfMenu_side+='</ul></div>'+
											  '</li>'
									
									
							$('.mainTopMenu').append(groupOfMenu)
                            $('.mainSideMenu').append(groupOfMenu_side)
							
							
						   

				 }
				   if(selectedGroupID !="")
					{
					   if (getUrlVars()["businesstype"] == "Agency") {
                           selectedGroupID = "Manage_Agency"
                       }

					   $("."+selectedGroupID).addClass("active")

                       $("."+selectedGroupID+"_").addClass("active")


                        $("."+selectedGroupID+"_").addClass("cma_active")


                            $('.mainSideMenu li').each(function() {
                            if($(this).attr("class") !=undefined){
	                            if($(this).attr("class").includes('cma_active')){
		                            $(this).prev().addClass("next-menu-active");
		
		                            $(this).next().addClass("prev-menu-active");
		                             if($(this).next().attr("class")==undefined){
			                            $(".mainSideMenu").append("<li class='has-dropdown prev-menu-active'><a href='#'></a></li>");
		                             }
		 
	                            }
                            }
                            })
                      
					 
					}
				   //$('.mainTopMenu').append('<li><a class="craftmyApp_logout_btn" href="@Url.Action("Logout","users")"><i class="fas fa-sign-out-alt"></i></a></li>')
                   //$('.mainSideMenu').append('<li class="craftmyApplogoutbtn"><a class="craftmyApp_logout_btn" href="@Url.Action("Logout","users")"><i class="fas fa-sign-out-alt"></i></li>')
                $("body").tooltip({ selector: '[data-toggle=tooltip]' });
                			 $('.dropdown-menu li a.has-submenu').on('click', function(event) {
      event.stopPropagation();
      $(this).closest('.dropdown').addClass('open');
    });
	
	$('[data-toggle="submenu"]').on('click', function(event) {
      let loc_sef = $(this),
        loc_submenu = loc_sef.next('.main-submenu');
      loc_submenu.slideToggle();
    })
	
	let clickedMenu;
    $('.has-dropdown', '#main-menu').click(function() {
		 
      clickedMenu = $(this);
      var loc_self = $(this),
        loc_dropdown_menu = $('.menu-dropdown', loc_self),
        loc_dropdown = loc_dropdown_menu.clone(),
        loc_pos = loc_dropdown_menu.offset();
      $('#dropdown_container').remove();
      $('#menubar').append('<div id="dropdown_container"></div>')
      $('#dropdown_container').append(loc_dropdown);
      $('#dropdown_container').css({
        position: 'fixed',
        top: loc_pos.top - 30,
        left: loc_pos.left
      });
    });

    $('body').click(function(e) {
      if (!$(e.target).closest('#dropdown_container').length) {
        $('#dropdown_container').remove();
      }
     
      if ($(e.target).attr('data-toggle') === 'submenu') {
        const loc_self = $(e.target);
        loc_self.toggleClass('submenu-open')
        loc_self.next('.main-submenu').slideToggle();
      }

    });

    // First calculate the footer height
    var footerHeight = $('#menubar .menubar-foot-panel').outerHeight();
    footerHeight = Math.max(footerHeight, 1)+200;
	 
    $('.menubar-scroll-panel').css({ 'margin-bottom': footerHeight });


    // Check if there is a menu
    var menu = $('#menubar');
    if (menu.length === 0)
      return;

    // Get scrollbar elements
    var menuScroller = $('.menubar-scroll-panel');
    var parent = menuScroller.parent();

    // Add the scroller wrapper
    if (parent.hasClass('nano-content') === false) {
      menuScroller.wrap('<div class="nano"><div class="nano-content"></div></div>');
    }

    // Set the correct height
    var height = $(window).height() - menu.position().top - menu.find('.nano').position().top;
    var scroller = menuScroller.closest('.nano');
    scroller.css({ height: height+500 });

    // Add the nanoscroller
    scroller.nanoScroller({ preventPageScrolling: true, iOSNativeScrolling: true });
}

function get_current_date() {

var today = new Date();
var dd = String(today.getDate()).padStart(2, '0');
var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
var yyyy = today.getFullYear();

today = dd + '/' + mm + '/' + yyyy;
return (today);
}


function get_current_datetime() {

var today = new Date();
var dd = String(today.getDate()).padStart(2, '0');
var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
var yyyy = today.getFullYear();
var hhmm= d.getHours()+':'+ (d.getMinutes()<10?'0':'') + d.getMinutes();
today = dd + '/' + mm + '/' + yyyy +' '+hhmm;
return (today);
}

    function getRatingString(rating)
        {
            
               var ratingDiv="<div class='starrr'>";

                for (var i = 1; i <= rating; i++)
                {
                    ratingDiv+="<i class='fa-star fa'></i>"
                }
                for (var i = rating; i < 5; i++)
                {
                    ratingDiv+="<i class='fa-star fa starempty'></i>"
                }

                ratingDiv+="</div>"
                return ratingDiv;
            }

           $("body").on("click", ".download_from_cloud", function(a) {
                $(".page-loader").show()
                a.preventDefault();
                $.ajax({
                    url: '@Url.Action("download","users")',
                    data: { filename: $(this).attr("id") },
                    success: function(data) {
                        $(".page-loader").hide()
                        var url = data;
                        if (data != "error")
                            if (data.indexOf("Error") != -1) {
                                swal({
                                    title: '',
                                    text: data,
                                    type: 'error',
                                    buttonsStyling: false,
                                    confirmButtonClass: 'btn btn-primary'
                                })
                            }
                            else {
                                window.open(url, '_blank');
                            }

                    }, error: function(jqXHR, textStatus, errorThrown) {
                        $(".page-loader").hide()
                    }
                });
            });
                                            function getAutho(controllername,viewname){
		 
											
												
                                                var a =  eval("@Context.Session.GetString("Multilingualrole_JSON")".replace(/&quot;/g, '"'))
                                                
                                                var index = 0;
                                                var found;
                                                var entry;
                                                for (index = 0; index < a.length; ++index) {
                                                    entry = a[index];
                                                    if (entry.controllername == controllername && entry.viewname== viewname) {
                                                        found = entry;
                                                        
                                                        break;
                                                    }
                                                }
                                                return found;

                                            }
											
											
											function getAuthoController(controllername){
		 
											 
												 
												var a =  eval("@Context.Session.GetString("Multilingualrole_JSON")".replace(/&quot;/g, '"'))
												 
												var index = 0;
												var found=[];
												var entry;
												for (index = 0; index < a.length; ++index) {
													entry = a[index];
													
													if (entry.controllername == controllername) {
													 
														found.push(entry);
														 
														//break;
													}
												}
												return found;

											}
                                            	function getRandomColor() {
		                                        var letters = '0123456789ABCDEF';
		                                        var color = '#';
		                                        for (var i = 0; i < 6; i++) {
		                                        color += letters[Math.floor(Math.random() * 16)];
		                                        }
		                                        return color;
	                                        }
                                            function getFixedColor(arrayVal){
											
											    var listofColors=['#A5D7FD','#63EEBF','#FF7C8F','#A4E063','#FEC85E','#66A4FE','#B2BECE','#F1948A','#EC7063','#B03A2E','#BB8FCE','#5B2C6F','#F1C40F','#E5E7E9','#717D7E']
											    if(arrayVal >=listofColors.length){
											       return getRandomColor()
											     }
											    return listofColors[arrayVal];
											}
                                            function get_dependent_li(data) {
                                            var htmlRetStr = "";

                                            if (JSON.parse(data).length > 1) {
                                                htmlRetStr = "<ul class='recurseObj' >"
                                                $.each(JSON.parse(data), function (key, jdata) {
                                                    htmlRetStr += "<li class='keyObj'>";
                                                    $.each(eval(jdata), function (index, jdata) {
                                                        
                                                        if ((jdata ? jdata : '').toString().includes('http')) {
                                                            if ((jdata ? jdata : '') != '') {

                                                                var splitted_urls = (jdata ? jdata : '').split('|');
                                                                var uploadedfiles = "";
                                                                for (var i = 0; i < splitted_urls.length; i++) {


                                                                    if (splitted_urls[i] != null && splitted_urls[i] != "") {
                                                                        uploadedfiles += '<a  href=' + splitted_urls[i] + ' class="table_files"><i class="fa fa-paperclip"></i></a>'

                                                                         
                                                                    }


                                                                }
                                                                htmlRetStr += "<strong>" + index + ":</strong>" + uploadedfiles + "</br>";

                                                            }
                                                        } else {
                                                            htmlRetStr += "<strong>" + index + ":</strong>" + (jdata ? jdata : '') + "</br>";
                                                        }


                                                    })
                                                    htmlRetStr += '</li>';
                                                })

                                                htmlRetStr += '</ul>';
                                            } else {

                                                
                                                $.each(JSON.parse(data), function (key, jdata) {
                                                     
                                                    $.each(eval(jdata), function (index, jdata) {
                                                        
                                                        if ((jdata ? jdata : '').toString().includes('http')) {
                                                            if ((jdata ? jdata : '') != '') {

                                                                var splitted_urls = (jdata ? jdata : '').split('|');
                                                                var uploadedfiles = "";
                                                                for (var i = 0; i < splitted_urls.length; i++) {


                                                                    if (splitted_urls[i] != null && splitted_urls[i] != "") {
                                                                        uploadedfiles += '<a  href=' + splitted_urls[i] + ' class="table_files"><i class="fa fa-paperclip"></i></a>'

                                                                         
                                                                    }


                                                                }
                                                                htmlRetStr += "<strong>" + index + ":</strong>" + uploadedfiles + "</br>";

                                                            }
                                                        } else {
                                                            htmlRetStr += "<strong>" + index + ":</strong>" + (jdata ? jdata : '') + "</br>";
                                                        }


                                                    })
                                                     
                                                })

                                            }
                                            
                                            return (htmlRetStr);
                                        }

                                         function get_dependent_table(data) {

	                                            var htmlRetStr="";
		                                        $.each(JSON.parse(data), function (key, jdata) {
												htmlRetStr += "<tr>"
			                                        $.each(eval(jdata), function (index, jdata) {
				                                        
                                                        if ((jdata ? jdata : '').toString().includes('http')) {
                                                            

                                                                var splitted_urls = (jdata ? jdata : '').split('|');
                                                                var uploadedfiles = "";
                                                                for (var i = 0; i < splitted_urls.length; i++) {


                                                                    if (splitted_urls[i] != null && splitted_urls[i] != "") {
                                                                        uploadedfiles += '<a  href=' + splitted_urls[i] + ' class="table_files"><i class="fa fa-paperclip"></i></a>'

                                                                         
                                                                    }


                                                                }
																htmlRetStr += "<td class='automaton_table_label'>";
                                                                htmlRetStr += uploadedfiles ;
																htmlRetStr += '</td>';

                                                             
                                                        } else {
															htmlRetStr += "<td class='automaton_table_label'>";
                                                            htmlRetStr += (jdata ? jdata : '') ;
															htmlRetStr += '</td>';
                                                        }
				                                        
				                                        


			                                        })
													
													htmlRetStr += '</tr>';
		                                        })

		                                        
	 

	                                        return (htmlRetStr);
                                        }

                                        function collect_formated_data(data) 
                                            {
		                                            var htmlRetStr="";
		                                             if ((data ? data : '').toString().includes('http')) {
				

					                                            var splitted_urls = (data ? data : '').split('|');
					                                            var uploadedfiles = "";
					                                            for (var i = 0; i < splitted_urls.length; i++) {


						                                            if (splitted_urls[i] != null && splitted_urls[i] != "") {
							                                            uploadedfiles += '<a  href=' + splitted_urls[i] + ' class="table_files"><i class="fa fa-paperclip"></i></a>'

							 
						                                            }


					                                            }
					                                            htmlRetStr += uploadedfiles ;
				 

				 
			                                            } else {
				                                              htmlRetStr += (data ? data : '') ;
			 
			                                            }
                                                    return htmlRetStr;
                                            }


                    

                                        </script>
                                        

<script src="~/js/Demo.js"></script>
<script>
$('.main-content').click(function(){
		 
		$('body').removeClass('menubar-open')

	})	
$(window).load(function () {
            // select element and fade it out
            $('.page-loader').fadeOut();
        });
</script>
</body>

</html>

